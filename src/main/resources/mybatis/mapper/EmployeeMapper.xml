<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alex.demo.mybatis.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.alex.demo.mybatis.model.Employee">
    <id column="emp_no" jdbcType="INTEGER" property="empNo" />
    <result column="birth_date" jdbcType="DATE" property="birthDate" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="hire_date" jdbcType="DATE" property="hireDate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employees
    where emp_no = #{empNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alex.demo.mybatis.model.Employee">
    insert into employees (emp_no, birth_date, first_name, last_name, 
      gender, hire_date)
    values (#{empNo,jdbcType=INTEGER}, #{birthDate,jdbcType=DATE}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, 
      #{gender,jdbcType=CHAR}, #{hireDate,jdbcType=DATE})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.alex.demo.mybatis.model.Employee">
    update employees
    set birth_date = #{birthDate,jdbcType=DATE},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      hire_date = #{hireDate,jdbcType=DATE}
    where emp_no = #{empNo,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select emp_no, birth_date, first_name, last_name, gender, hire_date
    from employees
    where emp_no = #{empNo,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select emp_no, birth_date, first_name, last_name, gender, hire_date
    from employees
  </select>
	<select id="findEmployees" parameterType="map" resultMap="BaseResultMap">
		select emp_no, birth_date, first_name, last_name, gender, hire_date
		from employees where 1=1
		<if test="empNo != '' and empNo != null">
			and emp_no = #{empNo}
		</if>
		<if test="firstName != '' and firstName != null">
			and first_name like concat('%',#{firstName},'%')
		</if>
		<if test="lastName != '' and lastName != null">
			and last_name like concat('%',#{lastName},'%')
		</if>
		limit 50
	</select>
</mapper>